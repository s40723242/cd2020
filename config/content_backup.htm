<h1>week</h1>
<p><a href="https://s40723242.github.io/cd2020/content/week1-4.html">week1-4</a></p>
<p><a href="https://s40723242.github.io/cd2020/content/week5-8.html">week5-8</a></p>
<p><a href="https://s40723242.github.io/cd2020/content/week9-12.html">week9-12</a></p>
<p><a href="https://s40723242.github.io/cd2020/content/week13-16.html">week13-16</a></p>
<h2>week1-4</h2>
<p><span style="color: #0000ff;"><strong>week1:</strong></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/dL9M0pdp2aU" width="560"></iframe></p>
<p>1.將<a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing" target="_blank">2019Fall可攜套件.7z</a>下在至USB內並進行解壓縮</p>
<p>2.進入<a href="https://github.com/" target="_blank">Github</a> <span>，</span>創建一個新的倉儲,並命名為''cd2020''</p>
<p>3.git clone至自身的USB</p>
<p>4.git submodule add<span> </span><a href="https://github.com/mdecourse/cmsimde.git" target="_blank">https://github.com/mdecourse/cmsimde.git</a> cmsimde</p>
<p>5.下載附件 python -m pip install flask_cors</p>
<p>6.進入 cmsimde 輸入 python wsgi.py 編輯頁面</p>
<p>7.編輯完進入靜態網頁<span>，退到cad2019推上Github</span></p>
<p><span>如何推上? git add . <span>⇒ git commit  -m "名稱" ⇒ git push</span></span></p>
<hr/>
<p><strong><span style="color: #0000ff;">week2:</span></strong></p>
<p><span color="#000000" style="color: #000000;">(一)各組組長需自行至教學頁面上自行加入<span style="color: #00ffff;">(group leader)<span style="color: #000000;">之標誌，並"git pull request"提交</span></span></span></p>
<p><span color="#000000" style="color: #00ccff;">如何提交?</span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #00ffff;"><span style="color: #000000;">1.首先先Fork老師個人倉儲.</span></span></span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #00ffff;"><span style="color: #000000;">2.將<span>Fork後的個人倉儲，以git clone --recurse-submodules "個人倉儲網址"下載至隨身系統.</span></span></span></span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #00ffff;"><span style="color: #000000;"><span>3.進入編輯頁面增加各組組長別稱</span></span></span></span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #00ffff;"><span style="color: #000000;"><span>4.提交完畢後已"New<span> pull request"對老師倉儲新增提交</span></span></span></span></span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #00ffff;"><span style="color: #000000;"><span><span>(二)將現有的Python3.7.3更新至Python3.8.2</span></span></span></span></span></p>
<p><span color="#000000" style="color: #000000;"><span style="color: #00ffff;"><span style="color: #000000;"><span><span>(三)開小組會議-討論未來分工及細項事務</span></span></span></span></span></p>
<p><strong><span style="color: #0000ff;">week3:</span></strong></p>
<p><strong><span style="color: #0000ff;">week4:</span></strong></p>
<h2>week5-8</h2>
<p><strong><span style="color: #0000ff;">week5:</span></strong></p>
<p><strong><span style="color: #0000ff;">week6:</span></strong></p>
<p><strong><span style="color: #0000ff;">week7:</span></strong></p>
<p><strong><span style="color: #0000ff;">week8:</span></strong></p>
<h2>week9-12</h2>
<p><strong><span style="color: #0000ff;">week9:</span></strong></p>
<p><strong><span style="color: #0000ff;">week10:</span></strong></p>
<p><strong><span style="color: #0000ff;">week11:</span></strong></p>
<p><strong><span style="color: #0000ff;">week12:</span></strong></p>
<h2>week13-16</h2>
<p><strong><span style="color: #0000ff;">week13:</span></strong></p>
<p><strong><span style="color: #0000ff;">week14:</span></strong></p>
<p><strong><span style="color: #0000ff;">week15:</span></strong></p>
<p><strong><span style="color: #0000ff;">week16:</span></strong></p>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>